{"version":3,"sources":["webpack:///./src/components/project.js","webpack:///./src/pages/projects.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/styles/global.js","webpack:///./src/components/seo.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["Container","styled","div","withConfig","displayName","componentId","StyledMainTile","StyledInfoTile","Heading","p","InfoLink","a","Button","button","BackButton","ProjectInfo","Project","props","_this","_React$Component","call","this","showInfoTile","bind","assertThisInitialized_default","showMainTile","state","isMoreInfoClicked","setState","render","tile","_this2","react_default","createElement","about","onClick","title","href","url","target","rel","React","Component","propTypes","PropTypes","string","Projects","Fragment","layout","seo","project","__webpack_require__","r","__webpack_exports__","d","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","createContext","Consumer","staticQueryData","data","query","children","Error","object","isRequired","func","m","module","exports","require","default","ProdPageRenderer","_ref","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","GlobalStyle","createGlobalStyle","_templateObject","SEO","description","lang","meta","keywords","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","metaDescription","site","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","array","arrayOf","OuterContainer","InnerContainer","MainTitle","h1","SubTitle","h2","Header","siteTitle","gatsby_browser_entry","to","style","color","textDecoration","subTitle","PageContent","Footer","footer","Layout","global","header","Date","getFullYear","_755544856","node"],"mappings":"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","file":"component---src-pages-projects-js-002b55abdf77c7e46e1a.js","sourcesContent":["import PropTypes from 'prop-types'\nimport React from 'react'\nimport styled from 'styled-components'\n\nconst Container = styled.div`\n  width: 700px;\n  text-align: center;\n  margin: 2rem 0;\n  color: var(--white);\n\n  @media (max-width: 800px) {\n    width: 80vw;\n  }\n`\n\nconst StyledMainTile = styled.div`\n  padding: 2rem 1rem;\n  background-color: var(--teal);\n`\n\nconst StyledInfoTile = styled.div`\n  padding: 2rem 1rem;\n  background-color: var(--light-grey);\n`\n\nconst Heading = styled.p`\n  font-size: 2.5rem;\n  font-weight: 800;\n\n  @media (max-width: 800px) {\n    font-size: 1.5rem;\n  }\n`\n\nconst InfoLink = styled.a`\n  color: var(--white);\n  font-size: 0.75rem;\n  border-bottom: 1px solid var(--white);\n  transition: all 0.35s ease-in-out;\n\n  &:hover {\n    color: var(--dark-grey);\n    cursor: pointer;\n    font-weight: 600;\n    border-bottom: 1px solid var(--dark-grey);\n  }\n`\n\nconst Button = styled.button`\n  border: 1px solid var(--white);\n  background-color: var(--teal);\n  color: var(--white);\n\n  &:hover {\n    background-color: var(--pink);\n  }\n`\n\nconst BackButton = styled(Button)`\n  background-color: var(--light-grey);\n\n  &:hover {\n    background-color: var(--teal);\n  }\n`\n\nconst ProjectInfo = styled.p`\n  @media (max-width: 800px) {\n    font-size: 0.75rem;\n  }\n`\n\nclass Project extends React.Component {\n  constructor(props) {\n    super(props)\n    this.showInfoTile = this.showInfoTile.bind(this)\n    this.showMainTile = this.showMainTile.bind(this)\n    this.state = { isMoreInfoClicked: false }\n  }\n\n  showInfoTile() {\n    this.setState({ isMoreInfoClicked: true })\n  }\n\n  showMainTile() {\n    this.setState({ isMoreInfoClicked: false })\n  }\n\n  render() {\n    const isMoreInfoClicked = this.state.isMoreInfoClicked\n    let tile\n\n    const MainTile = () => (\n      <StyledMainTile>\n        <InfoLink onClick={this.showInfoTile}>more info</InfoLink>\n        <Heading>{this.props.title}</Heading>\n        <a href={this.props.url} target=\"_blank\" rel=\"noopener noreferrer\">\n          <Button>Visit</Button>\n        </a>\n      </StyledMainTile>\n    )\n\n    const InfoTile = () => (\n      <StyledInfoTile>\n        <ProjectInfo>{this.props.about}</ProjectInfo>\n        <BackButton onClick={this.showMainTile}>Back</BackButton>\n      </StyledInfoTile>\n    )\n\n    if (isMoreInfoClicked) {\n      tile = <InfoTile />\n    } else {\n      tile = <MainTile />\n    }\n\n    return <Container>{tile}</Container>\n  }\n}\n\nProject.propTypes = {\n  url: PropTypes.string,\n  title: PropTypes.string,\n  about: PropTypes.string,\n}\n\nexport default Project\n","import React from 'react'\n\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\nimport Project from '../components/project'\n\nconst Projects = () => (\n  <>\n    <Layout>\n      <SEO title=\"Projects\" />\n\n      <Project\n        url=\"https://capricornrecords.com.au/\"\n        title=\"Capricorn Records\"\n        about=\"An independent e-commerce store selling used vinyls, built using Shopify's CMS.\"\n      />\n      <Project\n        url=\"https://techwhen.com/\"\n        title=\"TechWhen\"\n        about=\"A learning project that uses React, Docker, AWS, Material Design. When complete, it will list upcoming tech conferences.\"\n      />\n    </Layout>\n  </>\n)\n\nexport default Projects\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import { createGlobalStyle } from 'styled-components'\n\nconst GlobalStyle = createGlobalStyle`\n  :root {\n    --dark-grey: #555555;\n    --light-grey: #bdbdbd;\n    --white: #fcfcfc;\n    --pink: #ff78ba;\n    --teal: #00c7b6;\n  }\n  *, *:before, *:after {\n    box-sizing: inherit;\n  }\n  html {\n    text-rendering: optimizeLegibility;\n    overflow-x: hidden;\n    box-sizing: border-box;\n    font: 1.25em sans-serif;\n  }\n  html, body {\n    width: 100%;\n    height: 100%;\n    margin: 0;\n\t\tpadding: 0;\n  }\n  body {\n    @import url('https://fonts.googleapis.com/css?family=Raleway');\n    font-family: 'Raleway', sans-serif;\n    color: var(--dark-grey);\n    letter-spacing: 0.05rem;\n  }\n  h1, h2, h3, h4, h5, h6 {\n    font-weight: 300;\n    letter-spacing: 0.35rem;\n    color: var(--white);\n  }\n  a {\n    color: var(--teal);\n    text-decoration: none;\n  }\n  button {\n    font-size: 0.5rem;\n    letter-spacing: 0.2rem;\n    padding: 0.75rem 0.55rem 0.65rem 0.75rem;\n    text-transform: uppercase;\n    transition: all 0.35s ease-in-out;\n\n    &:hover {\n      cursor: pointer;\n    }\n\n    &:focus {\n      outline: none;\n    }\n  }\n`\n\nexport default GlobalStyle\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n","import { Link } from 'gatsby'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport styled from 'styled-components'\n\nconst OuterContainer = styled.div`\n  padding: 1.5rem;\n\n  @media (max-width: 700px) {\n    text-align: center;\n  }\n`\n\nconst InnerContainer = styled.div`\n  border: 1px solid var(--pink);\n  display: inline-block;\n  padding: 1rem;\n  transition: all 0.35s ease-in-out;\n  text-align: center;\n\n  &:hover {\n    border: 1px solid var(--teal);\n  }\n`\n\nconst MainTitle = styled.h1`\n  text-transform: uppercase;\n  font-size: 0.75rem;\n  color: var(--dark-grey);\n`\n\nconst SubTitle = styled.h2`\n  text-transform: uppercase;\n  font-size: 0.72rem;\n  color: var(--light-grey);\n`\n\nconst Header = ({ siteTitle }) => (\n  <OuterContainer>\n    <InnerContainer>\n      <Link\n        to=\"/\"\n        style={{\n          color: `white`,\n          textDecoration: `none`,\n        }}\n      >\n        <MainTitle>{siteTitle}</MainTitle>\n        <SubTitle>Web developer</SubTitle>\n      </Link>\n    </InnerContainer>\n  </OuterContainer>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n  subTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n  subTitle: ``,\n}\n\nexport default Header\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { StaticQuery, graphql } from 'gatsby'\nimport styled from 'styled-components'\n\nimport '../styles/normalize.css'\nimport GlobalStyle from '../styles/global'\nimport Header from './header'\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  min-height: 100vh;\n`\n\nconst PageContent = styled.div`\n  margin: 0 auto;\n  padding: 0px 1rem 1.5rem;\n  flex: 1;\n`\n\nconst Footer = styled.footer`\n  border-top: 1px solid var(--pink);\n  margin: 1rem;\n  padding: 1rem;\n  text-align: right;\n  font-size: 0.75rem;\n  line-height: 1.5;\n`\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Container>\n          <GlobalStyle />\n          <Header siteTitle={data.site.siteMetadata.title} />\n          <PageContent>{children}</PageContent>\n          <Footer>\n            © {new Date().getFullYear()}, Built with{` `}\n            <a\n              href=\"https://www.gatsbyjs.org\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              Gatsby\n            </a>\n            <br />\n            Source available on{` `}\n            <a\n              href=\"https://github.com/Letitia-May/portfolio\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              Github\n            </a>\n          </Footer>\n        </Container>\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}