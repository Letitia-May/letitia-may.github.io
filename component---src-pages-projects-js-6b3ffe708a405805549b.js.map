{"version":3,"sources":["webpack:///./src/components/projectTile/projectTile.js","webpack:///./src/pages/projects.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo/seo.js","webpack:///./src/components/header/header.js","webpack:///./src/components/layout/layout.js"],"names":["Project","props","_this","_React$Component","call","this","showInfoTile","bind","_assertThisInitialized","showMainTile","state","isMoreInfoClicked","setState","render","tile","_this2","react_default","a","createElement","className","styles","info_tile","project_info","about","back_button","onClick","main_tile","info_link","heading","title","href","url","target","rel","button","container","React","Component","Projects","Fragment","layout","seo","projectTile","__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","loader","enqueue","StaticQueryContext","createContext","StaticQueryDataRenderer","_ref","staticQueryData","data","query","finalData","children","Consumer","m","module","exports","require","default","ProdPageRenderer","location","pageResources","InternalPageRenderer","Object","assign","json","SEO","description","lang","meta","keywords","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_3__","detailsQuery","metaDescription","site","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","Header","siteTitle","outer_container","inner_container","gatsby_browser_entry","to","style","color","textDecoration","main_title","subtitle","subTitle","Layout","header","page_content","footer","Date","getFullYear","_755544856"],"mappings":"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","file":"component---src-pages-projects-js-6b3ffe708a405805549b.js","sourcesContent":["import PropTypes from 'prop-types'\nimport React from 'react'\nimport styles from './projectTile.module.scss'\n\nclass Project extends React.Component {\n  constructor(props) {\n    super(props)\n    this.showInfoTile = this.showInfoTile.bind(this)\n    this.showMainTile = this.showMainTile.bind(this)\n    this.state = { isMoreInfoClicked: false }\n  }\n\n  showInfoTile() {\n    this.setState({ isMoreInfoClicked: true })\n  }\n\n  showMainTile() {\n    this.setState({ isMoreInfoClicked: false })\n  }\n\n  render() {\n    const isMoreInfoClicked = this.state.isMoreInfoClicked\n    let tile\n\n    const MainTile = () => (\n      <div className={styles.main_tile}>\n        <a className={styles.info_link} onClick={this.showInfoTile}>more info</a>\n        <p className={styles.heading}>{this.props.title}</p>\n        <a href={this.props.url} target=\"_blank\" rel=\"noopener noreferrer\">\n          <button className={styles.button}>Visit</button>\n        </a>\n      </div >\n    )\n\n    const InfoTile = () => (\n      <div className={styles.info_tile}>\n        <p className={styles.project_info}>{this.props.about}</p>\n        <button className={styles.back_button} onClick={this.showMainTile}>Back</button>\n      </div>\n    )\n\n    if (isMoreInfoClicked) {\n      tile = <InfoTile />\n    } else {\n      tile = <MainTile />\n    }\n\n    return <div className={styles.container}>{tile}</div>\n  }\n}\n\nProject.propTypes = {\n  url: PropTypes.string,\n  title: PropTypes.string,\n  about: PropTypes.string,\n}\n\nexport default Project\n","import React from 'react'\n\nimport Layout from '../components/layout/layout'\nimport SEO from '../components/seo/seo'\nimport Project from '../components/projectTile/projectTile'\n\nconst Projects = () => (\n  <>\n    <Layout>\n      <SEO title=\"Projects\" />\n\n      <Project\n        url=\"https://capricornrecords.com.au/\"\n        title=\"Capricorn Records\"\n        about=\"An independent e-commerce store selling used vinyls, built using Shopify's CMS.\"\n      />\n      <Project\n        url=\"https://techwhen.com/\"\n        title=\"TechWhen\"\n        about=\"A learning project that uses React, Docker, AWS, Material Design. When complete, it will list upcoming tech conferences.\"\n      />\n    </Layout>\n  </>\n)\n\nexport default Projects\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                    name: `keywords`,\n                    content: keywords.join(`, `),\n                  }\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n","import { Link } from 'gatsby'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport styles from './header.module.scss'\n\nconst Header = ({ siteTitle }) => (\n  <div className={styles.outer_container}>\n    <div className={styles.inner_container}>\n      <Link\n        to=\"/\"\n        style={{\n          color: `white`,\n          textDecoration: `none`,\n        }}\n      >\n        <p className={styles.main_title}>{siteTitle}</p>\n        <p className={styles.subtitle}>Web developer</p>\n      </Link>\n    </div>\n  </div>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n  subTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n  subTitle: ``,\n}\n\nexport default Header\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { StaticQuery, graphql } from 'gatsby'\nimport styles from './layout.module.scss'\n\nimport '../../styles/normalize.css'\nimport '../../styles/main.scss'\nimport Header from '../header/header'\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <div className={styles.container}>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <div className={styles.page_content}>{children}</div>\n        <div className={styles.footer}>\n          © {new Date().getFullYear()}, Built with{` `}\n          <a\n            href=\"https://www.gatsbyjs.org\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Gatsby\n            </a>\n          <br />\n          Source available on{` `}\n          <a\n            href=\"https://github.com/Letitia-May/portfolio\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Github\n            </a>\n        </div>\n      </div>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}