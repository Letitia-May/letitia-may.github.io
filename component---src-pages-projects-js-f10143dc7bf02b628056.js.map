{"version":3,"sources":["webpack:///./src/components/projectTile/projectTile.js","webpack:///./src/pages/projects.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo/seo.js","webpack:///./src/components/header/header.js","webpack:///./src/components/layout/layout.js"],"names":["Project","propTypes","url","PropTypes","string","title","about","Projects","react_default","a","createElement","Fragment","layout","seo","projectTile","__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","loader","enqueue","StaticQueryContext","React","createContext","StaticQueryDataRenderer","_ref","staticQueryData","data","query","render","finalData","props","children","Consumer","m","module","exports","require","default","ProdPageRenderer","location","pageResources","InternalPageRenderer","Object","assign","json","SEO","description","lang","meta","keywords","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_3__","detailsQuery","metaDescription","site","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","Header","siteTitle","className","styles","outer_container","inner_container","gatsby_browser_entry","to","style","color","textDecoration","main_title","subtitle","subTitle","Layout","container","header","page_content","footer","Date","getFullYear","href","target","rel","_755544856"],"mappings":"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","file":"component---src-pages-projects-js-f10143dc7bf02b628056.js","sourcesContent":["import PropTypes from 'prop-types'\nimport React from 'react'\nimport styles from './projectTile.module.scss'\n\n// class Project extends React.Component {\nconst ProjectTile = (props) => {\n  // constructor(props) {\n  //   super(props)\n  //   this.showInfoTile = this.showInfoTile.bind(this)\n  //   this.showMainTile = this.showMainTile.bind(this)\n  //   this.state = { isMoreInfoClicked: false }\n  // }\n\n  let showInfoTile = () => {\n    this.setState({ isMoreInfoClicked: true })\n  }\n\n  let showMainTile = () => {\n    this.setState({ isMoreInfoClicked: false })\n  }\n\n  // render() {\n  //   const isMoreInfoClicked = this.state.isMoreInfoClicked\n  //   let tile\n\n  const MainTile = () => (\n    <div className={styles.main_tile}>\n      <a className={styles.info_link} onClick={this.showInfoTile}>more info</a>\n      <p className={styles.heading}>{this.props.title}</p>\n      <a href={this.props.url} target=\"_blank\" rel=\"noopener noreferrer\">\n        <button className={styles.button}>Visit</button>\n      </a>\n    </div >\n  )\n\n  const InfoTile = () => (\n    <div className={styles.info_tile}>\n      <p className={styles.project_info}>{this.props.about}</p>\n      <button className={styles.back_button} onClick={this.showMainTile}>Back</button>\n    </div>\n  )\n\n  if (isMoreInfoClicked) {\n    tile = <InfoTile />\n  } else {\n    tile = <MainTile />\n  }\n\n  return <div className={styles.container}>{tile}</div>\n}\n\n\nProject.propTypes = {\n  url: PropTypes.string,\n  title: PropTypes.string,\n  about: PropTypes.string,\n}\n\nexport default Project\n","import React from 'react'\n\nimport Layout from '../components/layout/layout'\nimport SEO from '../components/seo/seo'\nimport Project from '../components/projectTile/projectTile'\n\nconst Projects = () => (\n  <>\n    <Layout>\n      <SEO title=\"Projects\" />\n\n      <Project\n        url=\"https://capricornrecords.com.au/\"\n        title=\"Capricorn Records\"\n        about=\"An independent e-commerce store selling used vinyls, built using Shopify's CMS.\"\n      />\n      <Project\n        url=\"https://techwhen.com/\"\n        title=\"TechWhen\"\n        about=\"A learning project that uses React, Docker, AWS, Material Design. When complete, it will list upcoming tech conferences.\"\n      />\n    </Layout>\n  </>\n)\n\nexport default Projects\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                    name: `keywords`,\n                    content: keywords.join(`, `),\n                  }\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n","import { Link } from 'gatsby'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport styles from './header.module.scss'\n\nconst Header = ({ siteTitle }) => (\n  <div className={styles.outer_container}>\n    <div className={styles.inner_container}>\n      <Link\n        to=\"/\"\n        style={{\n          color: `white`,\n          textDecoration: `none`,\n        }}\n      >\n        <p className={styles.main_title}>{siteTitle}</p>\n        <p className={styles.subtitle}>Web developer</p>\n      </Link>\n    </div>\n  </div>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n  subTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n  subTitle: ``,\n}\n\nexport default Header\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { StaticQuery, graphql } from 'gatsby'\nimport styles from './layout.module.scss'\n\nimport '../../styles/normalize.css'\nimport '../../styles/main.scss'\nimport Header from '../header/header'\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <div className={styles.container}>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <div className={styles.page_content}>{children}</div>\n        <div className={styles.footer}>\n          © {new Date().getFullYear()}, Built with{` `}\n          <a\n            href=\"https://www.gatsbyjs.org\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Gatsby\n            </a>\n          <br />\n          Source available on{` `}\n          <a\n            href=\"https://github.com/Letitia-May/portfolio\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Github\n            </a>\n        </div>\n      </div>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}